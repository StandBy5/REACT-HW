# 
msgid ""
msgstr ""
"Project-Id-Version: KoNLPy 0.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-09-19 15:22+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../api/konlpy.tag.rst:2
msgid "tag Package"
msgstr ""

#: ../../api/konlpy.tag.rst:6
msgid ""
"Initial runs of each class method may require some time to load dictionaries"
" (< 1 *min*). Second runs should be faster."
msgstr ""

#: ../../api/konlpy.tag.rst:10
msgid ":class:`Hannanum` Class"
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum:1
msgid ""
"Wrapper for `JHannanum "
"<http://semanticweb.kaist.ac.kr/home/index.php/HanNanum>`_."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum:3
msgid ""
"JHannanum is a morphological analyzer and POS tagger written in Java, and "
"developed by the `Semantic Web Research Center (SWRC) "
"<http://semanticweb.kaist.ac.kr/>`_ at KAIST since 1999."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum:15 ../../../konlpy/tag/_kkma.pydocstring of
#: konlpy.tag._kkma.Kkma:15
msgid "The path of the JVM passed to :py:func:`.init_jvm`."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum.analyze:1
msgid "Phrase analyzer."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum.analyze:3
msgid ""
"This analyzer returns various morphological candidates for each token. It "
"consists of two parts: 1) Dictionary search (chart), 2) Unclassified term "
"segmentation."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum.morphs:1
#: ../../../konlpy/tag/_kkma.pydocstring of konlpy.tag._kkma.Kkma.morphs:1
#: ../../../konlpy/tag/_mecab.pydocstring of konlpy.tag._mecab.Mecab.morphs:1
msgid "Parse phrase to morphemes."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum.nouns:1 ../../../konlpy/tag/_kkma.pydocstring
#: of konlpy.tag._kkma.Kkma.nouns:1 ../../../konlpy/tag/_mecab.pydocstring of
#: konlpy.tag._mecab.Mecab.nouns:1
msgid "Noun extractor."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum.pos:1 ../../../konlpy/tag/_kkma.pydocstring
#: of konlpy.tag._kkma.Kkma.pos:1 ../../../konlpy/tag/_mecab.pydocstring of
#: konlpy.tag._mecab.Mecab.pos:1
msgid "POS tagger."
msgstr ""

#: ../../../konlpy/tag/_hannanum.pydocstring of
#: konlpy.tag._hannanum.Hannanum.pos:3
msgid "This tagger is HMM based, and calculates the probability of tags."
msgstr ""

#: ../../../konlpy/tag/_han